Show HN: Aesthetic Computer - Mobile-first runtime and social network for
                              creative computing. 
        (https://aesthetic.computer)

Aesthetic Computer is a mobile-first runtime and social network for creative computing.

AC's client interface is designed to function like a musical instrument, on which users discover their own memorizable paths in the network of commands and published pieces. As users grow their literacy through play and exploration, they are able to improvise, recombine, and expand their performable repertoire.

I started writing Aesthetic Computer in 2021 because I desired new tools to author, publish and connect the creative software toys I had been making in my art and education practice for 10+ years. The last of these before AC was https://nopaint.art, discussed here on HN in 2020.[0]

  *** How To ***

Visit https://aesthetic.computer and press the top left of the screen or type any key to activate the prompt.

In the AC prompt, enter names of built-in toy and utility pieces like `notepat`[1], or `boyfriend` and those published by user handles like `@bash/hub`.

Return to the prompt by pressing the name at the top left corner, your browser's back button or the [Esc], [`], or [Backspace] keyboard shortcuts.

Enter `list` at the prompt for a scrollable index of pieces and commands.

Most of AC is open to anonymous users. Some pieces like `chat` or `moods` require a registered @handle to fully participate and post data.

Every piece on AC is URL addressable. For example, users who enjoy using `notepat` can skip the prompt entirely by bookmarking https://aesthetic.computer/notepat.

QR codes to share any piece can be generated by prefixing the piece with `share` at prompt as in `share notepat`.

Here are a some recipes to try:

  A. Make a Painting

    1. Enter `new 128` to start a new 128x128 pixel painting.
    2. Enter `rect red` and drag to paint red (or any CSS color) rectangles.
       (Or try other primitive brushes like `line`, `shape`, and `fill`.)
    3. Press the command name in the top left corner to return to `prompt`.
       (Or use the [Esc], [Backspace], or [`] on the keyboard.)
    4. Enter `smear` and drag to use a pixel scattering brush, then return to `prompt`.
    5. Enter `dl` to download a timestamped PNG, `done` to publish the painting on AC
       servers, or `print` to mail order a real sticker.

  B. Play a Melody

    1. Enter `+` to open a second prompt window.
    2. Enter `metronome 120` in the second prompt window to keep rhythm at 120 BPM.
    3. Enter `notepat` in the first prompt window to play tones in regular time.
       (Or try `bleep:sine 4x4` for a randomized playable tone matrix.)
    - Bonus -
    4. Record a `notepat` performance as a 7s looping, downloadable video
       by entering `tape notepat`.
    5. Play `notepat` in person with others by generating a QR code
       via `share notepat`.

  C. Say "hi" in `chat`.

    1. Enter `imnew` or press [I'm New] on a deactivated prompt to register.
    2. Verify your email.
    3. Set a @handle by entering `handle ur-handle-here`.
    4. First-time handle setters are automatically routed to `chat`.
    5. Say "hi" and request technical help from myself (@jeffrey) and others.

To dive in more you can read the technical history [2] or try coding your own AC
piece[3].

[0] No Paint HN discussion from 2020: https://news.ycombinator.com/item?id=23546706

[1] Recent HN discussion on `notepat` here: https://news.ycombinator.com/item?id=41526754

[2] The AC Story: https://github.com/whistlegraph/aesthetic-computer/blob/main/STORY.txt

[3] Write a Piece: https://github.com/whistlegraph/aesthetic-computer/blob/main/WRITE-A-PIECE.txt



--- (Extra copy discussion) ---

One of my favorite ideas from Processing was the concept of
the "software sketch" and "sketchbook", which can be taken both metaphorically
as a call for creative action or mindful suggestion, and literally as a single
document or file embodying and exploring one idea or form.

This separation of concerns originates from one of the forefathers of Processing.
John Maeda, who baked his Java software sketchbook practice
(https://youtu.be/WAuDCOl9qrk?si=SyTRvNch4Z72_CU0&t=427) from the 90s into the
UX of an accessible tool for design students called Design By Numbers
(https://www.media.mit.edu/projects/design-by-numbers-again/overview), which
later evolved into the Processing desktop environment.

Back in 2009 when I was learning to program as an art student I struggled through
ActionScript 3 because I wanted my software to be available on the web. Web
browser support for Java applets were being phased out at that point due to
security concerns and libraries p5.js hadn't been written. The Canvas2D API was
a baby and WebGL didn't exist yet.

When I first discovered the Processing website with its learning resources and
downloaded the IDE I got so addicted to the feedback loop and mental model it
presented that I went from one bloated ActionScript 3 project to a portfolio of
prototypes and experiments I coded and kept all in one place. The API has short
commands and a single namespace which was a breath of fresh air from the design
of the complex and nested ActionScript 3 API which made iteration faster and
interface code more clear and easier to reason about. In short, I was learning
and exploring faster, and becoming more addicted. 

Eventually in my programming journey I came across the Unix philosophy
(https://en.wikipedia.org/wiki/Unix_philosophy) of composibility and recognized
that Processing's mental model of sketchbook based development was compatible
with the "one idea per program" doctrine in Unix utility design. 

Aesthetic Computer's built-in utilities follow this one idea model and can be
composed together to operate on shared data. Making graphics or playing music
on AC usually involves one or more pieces being run simultaneously or in a
sequence of prompts. 