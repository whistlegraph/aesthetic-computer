[build]
  command = "bash ./github-discord.sh"
  publish = "public"
[functions]
  node_bundler = "esbuild"
[functions.index]
  included_files = ["public/aesthetic.computer/disks/**/*.mjs",
                    "public/aesthetic.computer/dep/**/*.mjs",
                    "public/aesthetic.computer/systems/**/*.mjs",
                    "public/aesthetic.computer/lib/**/*.mjs",
                    "backend/**/*.mjs"]
[functions.handle]
  included_files = [
    "public/aesthetic.computer/lib/text.mjs",
    "backend/**/*.mjs"
    ]
  external_node_modules = ["got", "mongodb"]
[functions.user]
  included_files = ["backend/**/*.mjs"]
  external_node_modules = ["got", "mongodb"]
[functions.presigned-url]
  external_node_modules = ["got", "mongodb", "nanoid", "@aws-sdk-client-s3", "@aws-sdk/s3-request-presigner"]
  included_files = ["backend/**/*.mjs"]
[functions.thumbnail]
  external_node_modules = ["puppeteer"]
[functions.session]
  external_node_modules = ["got", "redis"]
[functions.reload]
  external_node_modules = ["got", "redis"]
[functions.sotce-blog]
  external_node_modules = ["got", "crypto", "patreon"]
[functions.vary]
  external_node_modules = ["got", "multiparty", "openai"]
[dev]
  NODE_ENV = "development"
  publish = "public/"
  #framework = "#static"
  command = "npm run spaces-dev-netlify"
  targetPort = 8111
  #port = 8888
  autoLaunch = false
[dev.https]
  certFile = "../ssl-dev/localhost.pem"
  keyFile = "../ssl-dev/localhost-key.pem"
[context.production]
  NODE_ENV= "production"
[[headers]]
  for = "/*" # Define which paths this specific [[headers]] block will cover.
  [headers.values]
    Access-Control-Allow-Origin = "*"
    # These headers are required in order for SharedArrayBuffer to be enabled.
    # Currently used by ffmpeg.wasm. 22.08.06.11.01
    Cross-Origin-Embedder-Policy = "require-corp"
    Cross-Origin-Opener-Policy = "same-origin"
[[headers]]
  for = "/*.mjs|/*.js"
  [headers.values]
    Access-Control-Allow-Origin = "*"
    Content-Security-Policy = "script-src 'self' blob: 'unsafe-eval';"
    Vary = "*"
[[redirects]]
  from = "/media/*"
  to = "https://aesthetic-computer-router.aesthetic-computer.workers.dev/media/:splat"
  # to = "http://localhost:8787/media/:splat" # Uncomment for developing the Cloudflare worker.
  status = 200
  force = true
# [[redirects]]
#   from = "/assets/*"
#   to = "https://assets.aesthetic.computer/:splat"
#   status = 200
#   force = true
[[redirects]]
  from = "/media-collection/*"
  to = "/.netlify/functions/media-collection"
  status = 200
  force = true
[[redirects]]
  from = "https://www.4esthetic.com/*"
  to = "https://aesthetic.computer/:splat"
  status = 301
  force = true
[[redirects]]
  from = "https://4esthetic.com/*"
  to = "https://aesthetic.computer/:splat"
  status = 301
  force = true
[[redirects]]
  from = "https://wand.ac"
  to = "https://aesthetic.computer/wand"
  status = 301
  force = true
[[redirects]]
  from = "https://botce.ac"
  to = "https://aesthetic.computer/botce"
  status = 200
  force = true
[[redirects]]
  from = "https://aesthetic.direct"
  to = "https://tiktok.com/@aesthetic.direct"
  status = 301
  force = true
[[redirects]]
  from = "https://m2w2.whistlegraph.com"
  to = "https://aesthetic.computer/wg~m2w2"
  status = 200
  force = false
[[redirects]]
  from = "https://sotce.aesthetic.computer"
  to = "https://aesthetic.computer/sotce-blog"
  status = 200
  force = false
# [[redirects]]
#   from = "https://blog.sotce.com"
#   to = "https://aesthetic.computer/sotce-blog"
#   status = 200
#   force = false
[[redirects]]
  from = "https://prompt.ac/*"
  to = "https://aesthetic.computer/:splat"
  status = 301
  force = true
[[redirects]]
  from = "/thumbnail/*"
  to = "/.netlify/builders/thumbnail"
  status = 200
[[redirects]]
  from = "/session/*"
  to = "/.netlify/functions/session"
  status = 200
[[redirects]]
  from = "/reload/*"
  to = "/.netlify/functions/reload"
  status = 200
[[redirects]]
  from = "/sotce-blog/*"
  to = "/.netlify/functions/sotce-blog"
  status = 200
[[redirects]]
  from = "/auth"
  to = "/.netlify/functions/auth"
  status = 200
[[redirects]]
  from = "/api/vary"
  to = "/.netlify/functions/vary"
  status = 200
[[redirects]]
  from = "/api/mood/*"
  to = "/.netlify/functions/mood"
  status = 200
[[redirects]]
  from = "/api/profile/*"
  to = "/.netlify/functions/profile"
  status = 200
[[redirects]]
  from = "/handle"
  to = "/.netlify/functions/handle"
  status = 200
[[redirects]]
  from = "/user"
  to = "/.netlify/functions/user"
  status = 200
[[redirects]]
  from = "/run"
  to = "/.netlify/functions/run"
  status = 200
[[redirects]]
  from = "/presigned-upload-url/*"
  to = "/.netlify/functions/presigned-url"
  status = 200
  force = true
[[redirects]]
  from = "/presigned-download-url/*"
  to = "/.netlify/functions/presigned-url"
  status = 200
  force = true
# ðŸ“” development only redirects (will deploy to, but won't route in production)
# 23.06.03.22.47 - Eventually netlify may add this: https://answers.netlify.com/t/using-different-redirects-across-different-contexts-environments/2524/19 
[[redirects]]
  from = "/api/ask"
  to = "http://localhost:3000/api/ask"
  status = 200
  force = false
# Index
[[redirects]]
  from = "/"
  to = "/.netlify/builders/index"
  status = 200
  force = true
# Catch any unfound disk paths to the blank disk.
[[redirects]]
  from = "/aesthetic.computer/disks/*"
  to = "/aesthetic.computer/disks/404.mjs"
  status = 404
  force = false
# Reroute any other unfound file to the index.
# TODO: This should be a 404...
[[redirects]]
  from = "/*"
  to = "/.netlify/builders/index"
  status = 200
  force = false