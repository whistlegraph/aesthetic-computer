# wasm-interp
# Autogenerated from man page /home/linuxbrew/.linuxbrew/share/man/man1/wasm-interp.1
complete -c wasm-interp -l help -d 'Print a help message'
complete -c wasm-interp -l version -d 'Print version information'
complete -c wasm-interp -s v -d 'Use multiple times for more info'
complete -c wasm-interp -l enable-exceptions -d 'Enable Experimental exception handling'
complete -c wasm-interp -l disable-mutable-globals -d 'Disable Import/export mutable globals'
complete -c wasm-interp -l disable-saturating-float-to-int -d 'Disable Saturating float-to-int operators'
complete -c wasm-interp -l disable-sign-extension -d 'Disable Sign-extension operators'
complete -c wasm-interp -l disable-simd -d 'Disable SIMD support'
complete -c wasm-interp -l enable-threads -d 'Enable Threading support'
complete -c wasm-interp -l enable-function-references -d 'Enable Typed function references'
complete -c wasm-interp -l disable-multi-value -d 'Disable Multi-value'
complete -c wasm-interp -l enable-tail-call -d 'Enable Tail-call support'
complete -c wasm-interp -l disable-bulk-memory -d 'Disable Bulk-memory operations'
complete -c wasm-interp -l disable-reference-types -d 'Disable Reference types (externref)'
complete -c wasm-interp -l enable-annotations -d 'Enable Custom annotation syntax'
complete -c wasm-interp -l enable-code-metadata -d 'Enable Code metadata'
complete -c wasm-interp -l enable-gc -d 'Enable Garbage collection'
complete -c wasm-interp -l enable-memory64 -d 'Enable 64-bit memory'
complete -c wasm-interp -l enable-multi-memory -d 'Enable Multi-memory'
complete -c wasm-interp -l enable-extended-const -d 'Enable Extended constant expressions'
complete -c wasm-interp -l enable-all -d 'Enable all features'
complete -c wasm-interp -s V -d 'Size in elements of the value stack'
complete -c wasm-interp -s C -d 'Size in elements of the call stack'
complete -c wasm-interp -s t -d 'Trace execution'
complete -c wasm-interp -l wasi -d 'Assume input module is WASI compliant (Export WASI API the the module and invâ€¦'
complete -c wasm-interp -s e -d 'Pass the given environment string in the WASI runtime'
complete -c wasm-interp -s d -d 'Pass the given directory the the WASI runtime'
complete -c wasm-interp -l run-all-exports -d 'Run all the exported functions, in order.  Useful for testing'
complete -c wasm-interp -l host-print -d 'Include an importable function named "host. print" for printing to stdout'
complete -c wasm-interp -l dummy-import-func -d 'Provide a dummy implementation of all imported functions'

