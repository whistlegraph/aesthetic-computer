# wast2json
# Autogenerated from man page /home/linuxbrew/.linuxbrew/share/man/man1/wast2json.1
complete -c wast2json -l help -d 'Print this help message'
complete -c wast2json -l version -d 'Print version information'
complete -c wast2json -s v -d 'Use multiple times for more info'
complete -c wast2json -l debug-parser -d 'Turn on debugging the parser of wast files'
complete -c wast2json -l enable-exceptions -d 'Enable Experimental exception handling'
complete -c wast2json -l disable-mutable-globals -d 'Disable Import/export mutable globals'
complete -c wast2json -l disable-saturating-float-to-int -d 'Disable Saturating float-to-int operators'
complete -c wast2json -l disable-sign-extension -d 'Disable Sign-extension operators'
complete -c wast2json -l disable-simd -d 'Disable SIMD support'
complete -c wast2json -l enable-threads -d 'Enable Threading support'
complete -c wast2json -l enable-function-references -d 'Enable Typed function references'
complete -c wast2json -l disable-multi-value -d 'Disable Multi-value'
complete -c wast2json -l enable-tail-call -d 'Enable Tail-call support'
complete -c wast2json -l disable-bulk-memory -d 'Disable Bulk-memory operations'
complete -c wast2json -l disable-reference-types -d 'Disable Reference types (externref)'
complete -c wast2json -l enable-annotations -d 'Enable Custom annotation syntax'
complete -c wast2json -l enable-code-metadata -d 'Enable Code metadata'
complete -c wast2json -l enable-gc -d 'Enable Garbage collection'
complete -c wast2json -l enable-memory64 -d 'Enable 64-bit memory'
complete -c wast2json -l enable-multi-memory -d 'Enable Multi-memory'
complete -c wast2json -l enable-extended-const -d 'Enable Extended constant expressions'
complete -c wast2json -l enable-all -d 'Enable all features'
complete -c wast2json -s o -d 'output JSON file'
complete -c wast2json -s r -d 'Create a relocatable wasm binary (suitable for linking with e. g.  lld)'
complete -c wast2json -l no-canonicalize-leb128s -d 'Write all LEB128 sizes as 5-bytes instead of their minimal size'
complete -c wast2json -l debug-names -d 'Write debug names to the generated binary file'
complete -c wast2json -l no-check -d 'Don\'t check for invalid modules El EXAMPLES Parse spec-test'

