// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.241.1/containers/codespaces-linux
// And for devcontainer cli usage check out: https://github.com/devcontainers/cli?tab=readme-ov-file
{
  "name": "Default",
  "build": {
    "dockerfile": "Dockerfile",
    "args": { 
      "BUILDKIT_INLINE_CACHE": "1",
      "DOCKER_BUILDKIT": "1"
    }
  },
  "containerEnv": {
    "DISPLAY": "${localEnv:DISPLAY}",
    "HOST_IP": "${localEnv:HOST_IP}",
    "WSL_DISTRO_NAME": "${localEnv:WSL_DISTRO_NAME}",
    "DOCKER_BUILDKIT": "1",
    "COMPOSE_DOCKER_CLI_BUILD": "1"
  },
  "mounts": [
    "source=${localWorkspaceFolder}/.devcontainer/.emacs.d,target=/home/me/.emacs.d,type=bind,consistency=cached",
    "source=${localWorkspaceFolder}/.devcontainer/envs,target=/home/me/envs,type=bind,consistency=cached",
    "source=${localWorkspaceFolder}/.devcontainer/fish_history,target=/home/me/.local/share/fish/fish_history,type=bind,consistency=cached",
    "source=codespaces-linux-var-lib-docker,target=/var/lib/docker,type=volume",
    "source=/var/run/docker.sock,target=/var/run/docker-host.sock,type=bind",
    "type=bind,source=/var/run/docker.sock,target=/var/run/docker.sock"
  ],
  // "features": {
  //   "ghcr.io/devcontainers/features/python:1": "none"
  // },
  "forwardPorts": [8888, 8111, 8889, 8083, 8084, 8085, 4040, 12345],
  "customizations": {
    "vscode": {
      "extensions": [
        "aesthetic-computer.aesthetic-computer-code",
        "esbenp.prettier-vscode",
        "ms-azuretools.vscode-docker",
        "mongodb.mongodb-vscode",
        "bmalehorn.vscode-fish",
        "ms-vsliveshare.vsliveshare",
        "jsynowiec.vscode-insertdatestring",
        "tootone.org-mode",
        "bashmish.es6-string-css",
        "zjcompt.es6-string-javascript",
        "dbaeumer.vscode-eslint",
        "bierner.lit-html",
        "vscodevim.vim",
        "GitHub.copilot",
        "GitHub.copilot-chat",
        "tamasfe.even-better-toml",
        "matthewpi.caddyfile-support",
        "ms-python.python",
        "ms-toolsai.jupyter",
        "ms-vscode.PowerShell",
        "ms-vscode.powershell",
        "ms-python.debugpy",
        "ms-python.vscode-pylance",
        "ms-toolsai.vscode-jupyter-cell-tags",
        "ms-toolsai.jupyter-keymap",
        "ms-toolsai.jupyter-renderers",
        // "rust-lang.rust-analyzer", // Temporarily disabled to reduce startup load
        "jinxdash.prettier-rust",
        "ms-python.black-formatter"
      ]
    }
  },
  "runArgs": [
    // ðŸ“‹ Clipboard also requires `xhost +local:docker` to be set on the host.
    "-v",
    "/tmp/.X11-unix:/tmp/.X11-unix",
    "-q",
    "--cap-add=SYS_PTRACE",
    "--security-opt=apparmor=unconfined",
    "--name",
    "aesthetic",
    "--hostname",
    "aesthetic",
    "--init",
    "--memory=12g",
    "--memory-swap=12g",
    "--shm-size=2g",
    "--cgroupns=host",
    "--tmpfs=/tmp:noexec,nosuid,size=2g",
    "-p",
    "0.0.0.0:8888:8888",
    "-p",
    "0.0.0.0:8889:8889",
    "--ulimit",
    "nofile=131072:131072"
    // "--network",
    // "host"
  ],
  "initializeCommand": "touch .devcontainer/fish_history",
  "postStartCommand": "fish /entry.fish",
  "postAttachCommand": "sudo touch /home/me/.waiter && sudo chmod 777 /home/me/.waiter && sudo chmod +w /home/me"
}
